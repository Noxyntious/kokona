name: Rust

on:
  push:
    branches: ["main"]
    paths-ignore:
      - "README.md"
      - ".github/workflows/rust.yml"
  pull_request:
    branches: ["main"]
    paths-ignore:
      - "README.md"
      - ".github/workflows/rust.yml"
  workflow_dispatch:
env:
  CARGO_TERM_COLOR: always

jobs:
  build-mac:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Cache Rust dependencies
        uses: actions/cache@v1.0.1
        with:
          path: target
          key: ${{ runner.OS }}-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-

      - name: Install Rust toolchain (Apple Silicon)
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-apple-darwin
          override: true

      - name: Build for mac
        run: cargo build --release --target aarch64-apple-darwin

      - name: Create Release Artifact
        uses: actions/upload-artifact@v3
        with:
          name: kokona-darwin-aarch64
          path: target/aarch64-apple-darwin/release/kokona

  build-windows:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Cache Rust dependencies
        uses: actions/cache@v1.0.1
        with:
          path: target
          key: ${{ runner.OS }}-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-pc-windows-gnu
          override: true

      - name: Install mingw-w64
        run: sudo apt-get update && sudo apt-get install -y mingw-w64

      - name: Build for Windows
        run: cargo build --release --target x86_64-pc-windows-gnu

      - name: Create Release Artifact
        uses: actions/upload-artifact@v3
        with:
          name: kokona-windows-x86_64
          path: target/x86_64-pc-windows-gnu/release/kokona.exe

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Cache Rust dependencies
        uses: actions/cache@v1.0.1
        with:
          path: target
          key: ${{ runner.OS }}-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-gnu
          override: true

      - name: Build for Linux
        run: cargo build --release --target x86_64-unknown-linux-gnu

      - name: Create Release Artifact
        uses: actions/upload-artifact@v3
        with:
          name: kokona-linux-x86_64
          path: target/x86_64-unknown-linux-gnu/release/kokona
